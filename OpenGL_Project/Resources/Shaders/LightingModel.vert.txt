#version 460 core

// Vertex Data Interpretation
layout (location = 0) in vec3 Position;
layout (location = 1) in vec2 TexCoords;
layout (location = 2) in vec3 Normal;
layout (location = 3) in mat4 InstancedModelMat;

// Inputs
uniform mat4 ProjectionMat;
uniform mat4 ViewMat;

// Outputs to Fragment Shader
out vec2 FragTexCoords; // only pass through texture coordinates
out vec3 FragNormal;
out vec3 FragPos;

// Shader Functionality
void main()
{
	gl_Position =  ProjectionMat * ViewMat * InstancedModelMat * vec4(Position, 1.0f);


	//gl_Position = ProjectionMat * ViewMat * ThreeDModelMat * vec4(Position, 1.0f);
	FragTexCoords = TexCoords; // pass through texture coordinates
	FragNormal = mat3(transpose(inverse(InstancedModelMat))) * Normal;
	FragPos = vec3(InstancedModelMat * vec4(Position, 1.0f));
}